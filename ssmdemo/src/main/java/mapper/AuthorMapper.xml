<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.AuthorMapper">
	<!-- 
	<resultMap id="BaseResultMap" type="entity.Author">
    <id column="AUTHOR_ID" jdbcType="DECIMAL" property="authorId" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="NICKNAME" jdbcType="VARCHAR" property="nickname" />
    <result column="BIRTHDAY" jdbcType="TIMESTAMP" property="birthday" />
    <result column="REGISTER_TIME" jdbcType="TIMESTAMP" property="registerTime" />
  </resultMap>
   
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    AUTHOR_ID, USERNAME, NICKNAME, BIRTHDAY, REGISTER_TIME
  </sql>
  <select id="selectByExample" parameterType="entity.AuthorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from AUTHOR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from AUTHOR
    where AUTHOR_ID = #{authorId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from AUTHOR
    where AUTHOR_ID = #{authorId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="entity.AuthorExample">
    delete from AUTHOR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Author">
    insert into AUTHOR (AUTHOR_ID, USERNAME, NICKNAME, 
      BIRTHDAY, REGISTER_TIME)
    values (#{authorId,jdbcType=DECIMAL}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=TIMESTAMP}, #{registerTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="entity.Author">
    insert into AUTHOR
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        AUTHOR_ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="nickname != null">
        NICKNAME,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
      <if test="registerTime != null">
        REGISTER_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        #{authorId,jdbcType=DECIMAL},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.AuthorExample" resultType="java.lang.Long">
    select count(*) from AUTHOR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update AUTHOR
    <set>
      <if test="record.authorId != null">
        AUTHOR_ID = #{record.authorId,jdbcType=DECIMAL},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.registerTime != null">
        REGISTER_TIME = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update AUTHOR
    set AUTHOR_ID = #{record.authorId,jdbcType=DECIMAL},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      NICKNAME = #{record.nickname,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=TIMESTAMP},
      REGISTER_TIME = #{record.registerTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Author">
    update AUTHOR
    <set>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        NICKNAME = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="registerTime != null">
        REGISTER_TIME = #{registerTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where AUTHOR_ID = #{authorId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Author">
    update AUTHOR
    set USERNAME = #{username,jdbcType=VARCHAR},
      NICKNAME = #{nickname,jdbcType=VARCHAR},
      BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
      REGISTER_TIME = #{registerTime,jdbcType=TIMESTAMP}
    where AUTHOR_ID = #{authorId,jdbcType=DECIMAL}
  </update>
  -->
  <insert id="insert" parameterType="entity.Author">
    insert into AUTHOR (AUTHOR_ID, USERNAME, NICKNAME, 
      BIRTHDAY, REGISTER_TIME)
    values (#{authorId,jdbcType=DECIMAL}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=TIMESTAMP}, #{registerTime,jdbcType=TIMESTAMP})
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from AUTHOR
    where AUTHOR_ID = #{authorId,jdbcType=DECIMAL}
  </delete>
</mapper>