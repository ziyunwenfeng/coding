<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.ArticleMapper">
  <!--
	<resultMap id="BaseResultMap" type="entity.Article">
		<id column="ARTICLE_ID" jdbcType="DECIMAL" property="articleId" />
		<result column="TITLE" jdbcType="VARCHAR" property="title" />
		<result column="TEXT" jdbcType="VARCHAR" property="text" />
		<result column="AUTHOR"  property="author" />
	</resultMap>
	
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue"> and ${criterion.condition}
								</when>
								<when test="criterion.singleValue"> and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue"> and ${criterion.condition} #{criterion.value}
									and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and
									${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=","> #{listItem} </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue"> and ${criterion.condition} </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List"> ARTICLE_ID, TITLE, TEXT, AUTHOR
	</sql>
	<select id="selectByExample" parameterType="tnet.ArticleExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct"> distinct </if>
		<include refid="Base_Column_List" />
		from ARTICLE
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null"> order by ${orderByClause} </if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		ARTICLE where ARTICLE_ID = #{articleId,jdbcType=DECIMAL}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long"> delete from
		ARTICLE
		where ARTICLE_ID = #{articleId,jdbcType=DECIMAL}
	</delete>
	<delete id="deleteByExample" parameterType="tnet.ArticleExample">
		delete from ARTICLE
		<if test="_parameter 
		!= null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="tnet.Article"> insert into ARTICLE
		(ARTICLE_ID,
		TITLE, TEXT, AUTHOR) values (#{articleId,jdbcType=DECIMAL},
		#{title,jdbcType=VARCHAR},
		#{text,jdbcType=VARCHAR}, #{author,jdbcType=DECIMAL})
	</insert>
	<insert id="insertSelective" parameterType="tnet.Article">
		insert into ARTICLE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="articleId != null"> ARTICLE_ID, </if>
			<if test="title != null"> TITLE, </if>
			<if test="text != null"> TEXT, </if>
			<if test="author != null"> AUTHOR, </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="articleId != null"> #{articleId,jdbcType=DECIMAL},
			</if>
			<if test="title != null"> #{title,jdbcType=VARCHAR}, </if>
			<if test="text 
		!= null"> #{text,jdbcType=VARCHAR}, </if>
			<if test="author != null"> #{author,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="tnet.ArticleExample"
		resultType="java.lang.Long">
		select count(*) from ARTICLE
		<if test="_parameter 
		!= null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update ARTICLE
		<set>
			<if test="record.articleId != null"> ARTICLE_ID = #{record.articleId,jdbcType=DECIMAL},
			</if>
			<if test="record.title != null"> TITLE = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.text != null"> TEXT = #{record.text,jdbcType=VARCHAR},
			</if>
			<if test="record.author != null"> AUTHOR = #{record.author,jdbcType=DECIMAL},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update
		ARTICLE set ARTICLE_ID = #{record.articleId,jdbcType=DECIMAL}, TITLE =
		#{record.title,jdbcType=VARCHAR},
		TEXT = #{record.text,jdbcType=VARCHAR}, AUTHOR =
		#{record.author,jdbcType=DECIMAL}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="tnet.Article">
		update ARTICLE
		<set>
			<if test="title != null"> TITLE = #{title,jdbcType=VARCHAR},
			</if>
			<if test="text != null"> TEXT = #{text,jdbcType=VARCHAR}, </if>
			<if test="author != null"> AUTHOR = #{author,jdbcType=DECIMAL}, </if>
		</set>
		where ARTICLE_ID = #{articleId,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKey" parameterType="tnet.Article"> update ARTICLE
		set TITLE = #{title,jdbcType=VARCHAR},
		TEXT = #{text,jdbcType=VARCHAR}, AUTHOR = #{author,jdbcType=DECIMAL} where
		ARTICLE_ID = #{articleId,jdbcType=DECIMAL}
	</update>
	
	<insert id="insert" parameterType="entity.Article"> 
		insert into ARTICLE
		(article_id,
		title, text,author) values (#{articleId},
		#{title},
		#{text},#{author})
	</insert>
	-->
	<update id="updateByPrimaryKey" parameterType="entity.Article"> 
		update ARTICLE
		set TITLE = #{title,jdbcType=VARCHAR},
		TEXT = #{text,jdbcType=VARCHAR}, AUTHOR = #{author.authorId} where
		ARTICLE_ID = #{articleId}
	</update>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long"> delete from
		ARTICLE
		where ARTICLE_ID = #{articleId,jdbcType=DECIMAL}
	</delete>
	<insert id="insert" parameterType="entity.Article"> insert into ARTICLE
		(ARTICLE_ID,
		TITLE, TEXT, AUTHOR) values (#{articleId,jdbcType=DECIMAL},
		#{title,jdbcType=VARCHAR},
		#{text,jdbcType=VARCHAR}, #{author.authorId,jdbcType=DECIMAL})
	</insert>
	
	<resultMap type="entity.Article" id="artcileMap">
		<id property="articleId" column="article_id" />
		<result property="title" column="title" />
		<result property="text" column="text" />
		<association property="author" column="author_id"
			javaType="entity.Author">
			<id property="authorId" column="author_id" />
			<result property="username" column="username" />
			<result property="nickname" column="nickname" />
			<result property="birthday" column="birthday" />
			<result property="registerTime" column="register_time" />
		</association>
	</resultMap>
	<!-- <select id="selectArticleComments" resultMap="artcileMap"> select * 
		from article,author where article.author = author.author_id and article.article_id=#{articleId} 
		</select> <resultMap type="entity.Article" id="artcileMap"> <id property="articleId" 
		column="article_id" /> <result property="title" column="title" /> <result 
		property="text" column="text" /> <association property="author" column="author_id" 
		javaType="entity.Author"> <id property="authorId" column="author_id" /> <result 
		property="username" column="username" /> <result property="nickname" column="nickname" 
		/> <result property="birthday" column="birthday" /> <result property="registerTime" 
		column="register_time" /> </association> </resultMap> -->
	<select id="selectArticleWithCommentsByArticle" parameterType="java.lang.Long"
		resultMap="articleCommentsMap">
		select * from article ,comments,author 
		where
		article.article_id=comments.article and article.author = author.author_id and
		article.article_id=#{articleId}
	</select>
	<resultMap type="entity.Article" id="articleCommentsMap">
		<id property="articleId" column="article_id" />
		<result property="title" column="title" />
		<result property="text" column="text" />
		<association property="author" javaType="entity.Author">
			<id property="authorId" column="author_id" />
			<result property="username" column="username" />
			<result property="nickname" column="nickname" />
			<result property="birthday" column="birthday" />
			<result property="registerTime" column="register_time" />
		</association>
		<collection property="comments" ofType="entity.Comments">
			<id property="commentsId" column="comments_id" />
			<result property="comments" column="comments" />
		</collection>
	</resultMap>

	<select id="selectArticleByComments" parameterType="java.lang.Long"
		resultMap="articleByCommentsMap">
		select * from article,comments,author where
		article.article_id=comments.article and author.author_id =
		comments.author and
		comments.comments_id=#{commentsId}
	</select>
	<resultMap type="entity.Comments" id="articleByCommentsMap">
		<id property="commentsId" column="comments_id" />
		<result property="comments" column="comments" />

		<association property="article" javaType="entity.Article">
			<id property="articleId" column="article_id" />
			<result property="title" column="title" />
			<result property="text" column="text" />
			<collection property="comments" ofType="entity.Comments">
				<id property="commentsId" column="comments_id" />
				<result property="comments" column="comments" />

			</collection>
		</association>
		<association property="author" javaType="entity.Author">
			<id property="authorId" column="author_id" />
			<result property="username" column="username" />
			<result property="nickname" column="nickname" />
			<result property="birthday" column="birthday" />
			<result property="registerTime" column="register_time" />
		</association>
	</resultMap>
</mapper>